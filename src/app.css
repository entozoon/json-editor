*,
::before,
::after {
  box-sizing: border-box;
}
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
}
html {
  background: transparent;
  scroll-behavior: smooth;
  font-size: 62.5%;
}
body {
  font-family: "Roboto", sans-serif;
  font-size: 12px;
  color: white;
  background: transparent;
}
html,
#App,
body {
  overflow: hidden;
}
#App {
  height: 100%;
  overflow: hidden;
  overflow-y: scroll;
  background: black;
  clip-path: polygon(
    0.5em 0,
    calc(100% - 0.5em) 0,
    100% 0.5em,
    100% calc(100% - 0.5em),
    calc(100% - 0.5em) 100%,
    0.5em 100%,
    0 calc(100% - 0.5em),
    0 0.5em
  );
}
header {
  display: flex;
  position: sticky;
  justify-content: space-between;
  top: 0;
  padding: 0.4em 1em;
  margin: 0 0 0.4em;
  box-shadow: 0 0 1em 1px black;
  align-items: center;
  background: linear-gradient(
    to bottom right,
    rgb(56, 107, 158),
    rgb(2, 25, 49)
  );
}
header::before {
  content: "";
  position: absolute;
  top: 3px;
  left: 3px;
  right: 3px;
  bottom: 3px;
  -webkit-app-region: drag;
  pointer-events: none;
}
header * {
  position: relative;
}
a,
button,
.input,
input,
label {
  /* Having fun yet? https://github.com/electron/electron/issues/1354#issuecomment-89599580 */
  -webkit-app-region: no-drag;
}
.input {
  position: relative;
}
input::before {
  content: "";
  box-shadow: -5px -3px 26px 1px white;
  top: 50%;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0;
  display: block;
  position: absolute;
}
button,
input,
input[type="file"] + label {
  display: block;
  width: auto;
  margin: 0 0.3em;
  padding: 0.3em 0.9em;
  font-family: inherit;
  border: 0;
  background: #222;
  color: orange;
  clip-path: polygon(
    0.5em 0,
    calc(100% - 0.5em) 0,
    100% 0.5em,
    100% calc(100% - 0.5em),
    calc(100% - 0.5em) 100%,
    0.5em 100%,
    0 calc(100% - 0.5em),
    0 0.5em
  );
  cursor: pointer;
  border: 1px solid black;
  border-radius: 0.65em; /* cheeky AF */
  box-shadow: inset 0.3em 0.3em 0.5em 0 #040000,
    inset -0.1em -0.1em 0.7em 0 rgba(255, 255, 255, 0.1);
  transition: all 0.1s ease-out;
  user-select: none;
  outline: none !important;
}
button:hover,
input:hover,
input[type="file"] + label:hover {
  background: black;
}
input[type="file"] {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1;
  justify-self: center;
}
.file {
  display: flex;
  align-items: center;
}
.filename {
  margin-left: 1em;
  font-style: italic;
}
.error {
  padding: 1em;
  font-size: 1.2em;
}
.controls span {
  display: flex;
  justify-content: flex-end;
}
h1 {
  margin: 0;
  font-size: 1.2em;
  letter-spacing: 0.3em;
  background: linear-gradient(to right, white, #3d76af);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
main {
  flex-grow: 1;
}
.object {
  display: grid;
  grid-template-columns: auto 1fr;
  padding-bottom: 0.2em;
  margin-bottom: 0.2em;
  border-bottom: 1px solid #666;
}
p {
  display: flex;
  margin: 0 0 0.2em;
}
label,
textarea {
  padding: 0.3em 0.5em 0.1em;
  line-height: 1.2;
  font-size: 1em;
}
label {
  margin-right: 1em;
  width: 25%;
}
textarea {
  flex-grow: 1;
  color: #fff;
  /* background: #222; */
  /* box-shadow: inset 0 2px 3px rgba(0, 0, 0, 0.75); */
  border: 0;
  margin: 1px;
  background: #231b13;
  box-shadow: inset 1px 1px 4px 1px rgba(0, 0, 0, 0.8),
    inset -1px 0px 3px 1px rgba(80, 68, 59, 0.9);
  outline: none;
  font-family: inherit;
}
textarea:focus {
  background-color: #3e2b02;
}
.-array {
  color: #5bd664;
}
.-integer {
  color: #dd7150;
}
.-float {
  color: orange;
}
